---
// Importerer komponenter fra Astro
import MainLayout from "../../layouts/MainLayout.astro";
import EventList from "../../components/EventList.astro";
import FilterBtn from "../../components/Filter_btn.astro";

// Importerer createClient-metoden fra '@supabase/supabase-js'.
import { createClient } from '@supabase/supabase-js';

// Importerer global CSS-stil.
import "../../styles/global.css";

// Definerer en funktion for at hente statiske paths.
export async function getStaticPaths() {
    const supabaseUrl = 'https://ytbpkmmrhxeuawuggktn.supabase.co';
    const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl0YnBrbW1yaHhldWF3dWdna3RuIiwicm9sZSI6ImFub24iLCJpYXQiOjE2Nzg3ODY5NDEsImV4cCI6MTk5NDM2Mjk0MX0.C7HKtjFf03nvDpJTjYOtRlR-1nQ18yozjpLSTlaRKO8';
    const supabase = createClient(supabaseUrl, supabaseKey);

    // Henter alle begivenheder fra 'festival_events'-tabellen.
    const response = await supabase
        .from('festival_events')
        .select('*');

    const data = await response.data;

    // Funktion til at filtrere begivenheder efter kategorier.
    function filterEventsByCategories(data) {
        const filteredEvents = {};

        data.forEach(event => {
        event.categories.forEach(category => {
        if (!filteredEvents.hasOwnProperty(category)) {
            filteredEvents[category] = [];
        }
        filteredEvents[category].push(event);
        });
        });

        return filteredEvents;
    }

    // Kategoriserede begivenheder.
    const categorizedEvents = filterEventsByCategories(data);
    const categories = Object.keys(categorizedEvents);

    // Opretter en array af objekter med kategori-parametre og navne.
    const paths = categories.map(category => {
        return {
            params: {
                category: category, 
            },
        };
    });

    // Tilføjer "category: all" til paths-arrayet, så der også er en "Alle events" underside.
    paths.push({
        params: {
            category: 'Alle',
        },
    });

    return paths; // Returnerer 'paths' arrayet.
}


const supabaseUrl = 'https://ytbpkmmrhxeuawuggktn.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl0YnBrbW1yaHhldWF3dWdna3RuIiwicm9sZSI6ImFub24iLCJpYXQiOjE2Nzg3ODY5NDEsImV4cCI6MTk5NDM2Mjk0MX0.C7HKtjFf03nvDpJTjYOtRlR-1nQ18yozjpLSTlaRKO8';

const supabase = createClient(supabaseUrl, supabaseKey);

// Henter alle begivenheder fra 'festival_events'-tabellen og sorterer dem efter dato og starttidspunkt.
const response = await supabase
  .from('festival_events')
  .select('*')
  .order('date', { ascending: true })
  .order ('start_time', { ascending: true });


const data = response.data

// Funktion til at filtrere begivenheder efter kategorier.
function filterEventsByCategories(data) {
  const filteredEvents = {};

  data.forEach(event => {
    event.categories.forEach(category => {
      if (!filteredEvents.hasOwnProperty(category)) {
        filteredEvents[category] = [];
      }
      filteredEvents[category].push(event);
    });
  });

  return filteredEvents;
}

// Kategoriserede begivenheder.
const categorizedEvents = filterEventsByCategories(data);
const categories = Object.keys(categorizedEvents);

// Deklarerer variablen 'category' fra Astro.params.
const { category } = Astro.params;


---

<MainLayout title={category}>
    <section>
      <h1>Program</h1>
      <a href="/">Hent pdf'en for hele programmet <b>her</b></a>
    </section>
  
      <div>
        <ul class="categories">
          <li>
            <a href="/program/Alle">
              <button>
                Alle events
              </button>
            </a>
          </li>
          {categories.map (category => (
            <li>
              <FilterBtn category={category} />
            </li>
          ))}
        </ul>
      </div>
      <h2>Lørdag</h2>
        <EventList date="2023-04-22" events={data} category={category}/>
  
      <h2>Søndag</h2>
        <EventList date="2023-04-23" events={data} category={category}/>
  </MainLayout>
  
  <style>
    h1 {
      margin-bottom: 1rem;
    }
  
    h2 {
      margin-bottom: 1rem;
      margin-top: 2rem;
    }
    ul {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      list-style: none;
      padding: 0;
      margin: 0;
      gap: 1rem;
      margin-bottom: 2rem;
  
    }
    section {
      margin-bottom: 2rem;
      max-width: 800px;
      margin-inline: auto;
    }
  
    .categories {
      margin-block: 1rem;
    }
    
    a {
      color: var(--color-primary);
      text-decoration: none;
    }

    button {
      background-color: #ed749d;
      border: none;
      color: #101010;
      padding: 0.6rem 1.2rem;
      border-radius: 500px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #cb5a80;
    }
  </style>